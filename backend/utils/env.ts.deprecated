// backend/utils/env.ts

type Env = {
  NODE_ENV: string;
  CLIENT_ORIGIN?: string;
  BACKEND_URL?: string;

  STRIPE_SECRET: string;          // Alias-normalisiert (STRIPE_SECRET|STRIPE_API_KEY|STRIPE_SECRET_KEY)
  STRIPE_WEBHOOK_SECRET?: string; // optional in dev, Pflicht in prod
  STRIPE_PRICE_PRO?: string;
  STRIPE_PRICE_DAYPASS?: string;
};

function pick(...keys: string[]): string | undefined {
  for (const k of keys) {
    const v = process.env[k];
    if (typeof v === "string" && v.trim() !== "") return v.trim();
  }
  return undefined;
}

function requireEnv(key: string): string {
  const v = process.env[key];
  if (typeof v !== "string" || v.trim() === "") {
    throw new Error(`Missing required env: ${key}`);
  }
  return v.trim();
}

// Stripe Secret über Aliase auflösen
const STRIPE_SECRET =
  pick("STRIPE_SECRET", "STRIPE_API_KEY", "STRIPE_SECRET_KEY") || "";

export const env: Env = {
  NODE_ENV: process.env.NODE_ENV || "development",
  CLIENT_ORIGIN: process.env.CLIENT_ORIGIN,
  BACKEND_URL: process.env.BACKEND_URL,

  STRIPE_SECRET, // leer ist erlaubt in dev bis stripeClient.ts greift (wir werfen dort, wenn leer)
  STRIPE_WEBHOOK_SECRET: process.env.STRIPE_WEBHOOK_SECRET,
  STRIPE_PRICE_PRO: process.env.STRIPE_PRICE_PRO,
  STRIPE_PRICE_DAYPASS: process.env.STRIPE_PRICE_DAYPASS,
};

// Optional: In Produktion bestimmte Keys erzwingen
if (env.NODE_ENV === "production") {
  // Wirft bei Fehlen:
  requireEnv("STRIPE_SECRET"); // alias-normalisiert oben
  requireEnv("STRIPE_WEBHOOK_SECRET");
}
